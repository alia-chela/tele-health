service: () -> {
    calculateBMI: (nat64, nat64) -> (variant {Ok:text; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}}) query;
    calculateDosage: (nat64, nat64) -> (variant {Ok:nat64; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}}) query;
    calculateHealthRiskScore: (nat64, nat64, nat64) -> (variant {Ok:text; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}}) query;
    createAppointment: (record {patient_id:text; appointment_time:text; doctor_id:text; reason:text}) -> (variant {Ok:record {id:text; status:text; patient_id:text; appointment_time:text; video_link:opt text; doctor_id:text; reason:text}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}});
    createChat: (record {patient_id:text; message:text; timestamp:text; doctor_id:text}) -> (variant {Ok:record {id:text; patient_id:text; message:text; timestamp:text; doctor_id:text}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}});
    createConsultation: (record {department_id:text; patient_id:text; problem:text}) -> (variant {Ok:record {id:text; department_id:text; patient_id:text; problem:text}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}});
    createDepartment: (record {name:text; description:text}) -> (variant {Ok:record {id:text; name:text; description:text}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}});
    createDoctor: (record {department_id:text; name:text; image:text}) -> (variant {Ok:record {id:text; department_id:text; owner:principal; name:text; image:text}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}});
    createPatient: (record {age:nat64; name:text; current_medications:vec text; email:text; address:text; gender:text; emergency_contact:record {relationship:text; name:text; phone_number:text}; medical_history:vec text; phone_number:text; allergies:vec text}) -> (variant {Ok:record {id:text; age:nat64; owner:principal; name:text; current_medications:vec text; email:text; address:text; gender:text; emergency_contact:record {relationship:text; name:text; phone_number:text}; medical_history:vec text; phone_number:text; allergies:vec text}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}});
    createPrescription: (record {patient_id:text; instructions:text; medications:vec text; doctor_id:text}) -> (variant {Ok:record {id:text; patient_id:text; issued_at:text; instructions:text; medications:vec text; doctor_id:text}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}});
    deleteDepartment: (text) -> (variant {Ok:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}});
    deleteDoctor: (text) -> (variant {Ok:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}});
    deletePatient: (text) -> (variant {Ok:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}});
    estimateInsuranceCost: (nat64, bool) -> (variant {Ok:nat64; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}}) query;
    getAllChats: () -> (variant {Ok:vec record {id:text; patient_id:text; message:text; timestamp:text; doctor_id:text}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}}) query;
    getAllConsultations: () -> (variant {Ok:vec record {id:text; department_id:text; patient_id:text; problem:text}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}}) query;
    getAllDepartments: () -> (variant {Ok:vec record {id:text; name:text; description:text}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}}) query;
    getAllDoctors: () -> (variant {Ok:vec record {id:text; department_id:text; owner:principal; name:text; image:text}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}}) query;
    getAllPatients: () -> (variant {Ok:vec record {id:text; age:nat64; owner:principal; name:text; current_medications:vec text; email:text; address:text; gender:text; emergency_contact:record {relationship:text; name:text; phone_number:text}; medical_history:vec text; phone_number:text; allergies:vec text}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}}) query;
    getChatById: (text) -> (variant {Ok:record {id:text; patient_id:text; message:text; timestamp:text; doctor_id:text}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}}) query;
    getConsultationById: (text) -> (variant {Ok:record {id:text; department_id:text; patient_id:text; problem:text}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}}) query;
    getConsultationHistoryByPatient: (text) -> (variant {Ok:vec record {id:text; department_id:text; patient_id:text; problem:text}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}}) query;
    getDepartmentById: (text) -> (variant {Ok:record {id:text; name:text; description:text}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}}) query;
    getDoctorByDepartment: (text) -> (variant {Ok:vec record {id:text; department_id:text; owner:principal; name:text; image:text}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}}) query;
    getDoctorById: (text) -> (variant {Ok:record {id:text; department_id:text; owner:principal; name:text; image:text}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}}) query;
    getDoctorByOwner: () -> (variant {Ok:record {id:text; department_id:text; owner:principal; name:text; image:text}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}}) query;
    getMedicalRecordsByPatient: (text) -> (variant {Ok:record {patient_id:text; immunizations:vec text; consultation_notes:vec text; lab_results:vec text; prescriptions:vec record {id:text; patient_id:text; issued_at:text; instructions:text; medications:vec text; doctor_id:text}}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}}) query;
    getPatientById: (text) -> (variant {Ok:record {id:text; age:nat64; owner:principal; name:text; current_medications:vec text; email:text; address:text; gender:text; emergency_contact:record {relationship:text; name:text; phone_number:text}; medical_history:vec text; phone_number:text; allergies:vec text}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}}) query;
    getPatientByOwner: () -> (variant {Ok:record {id:text; age:nat64; owner:principal; name:text; current_medications:vec text; email:text; address:text; gender:text; emergency_contact:record {relationship:text; name:text; phone_number:text}; medical_history:vec text; phone_number:text; allergies:vec text}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}}) query;
    initiatePayment: (record {patient_id:text; appointment_id:text; payment_method:text; amount:nat64}) -> (variant {Ok:record {id:text; status:text; patient_id:text; appointment_id:text; payment_method:text; amount:nat64}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}});
    searchDepartmentByName: (text) -> (variant {Ok:vec record {id:text; name:text; description:text}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}}) query;
    searchDoctorByName: (text) -> (variant {Ok:vec record {id:text; department_id:text; owner:principal; name:text; image:text}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}}) query;
    updateAppointmentWithVideoLink: (text, text) -> (variant {Ok:record {id:text; status:text; patient_id:text; appointment_time:text; video_link:opt text; doctor_id:text; reason:text}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}});
    updateDoctor: (text, record {department_id:text; name:text; image:text}) -> (variant {Ok:record {id:text; department_id:text; owner:principal; name:text; image:text}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}});
    updateDoctorAvailability: (text, bool) -> (variant {Ok:record {id:text; department_id:text; owner:principal; name:text; image:text}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}});
    updateMedicalRecords: (text, record {patient_id:text; immunizations:vec text; consultation_notes:vec text; lab_results:vec text; prescriptions:vec record {id:text; patient_id:text; issued_at:text; instructions:text; medications:vec text; doctor_id:text}}) -> (variant {Ok:record {patient_id:text; immunizations:vec text; consultation_notes:vec text; lab_results:vec text; prescriptions:vec record {id:text; patient_id:text; issued_at:text; instructions:text; medications:vec text; doctor_id:text}}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}});
    updatePatient: (text, record {age:nat64; name:text; current_medications:vec text; email:text; address:text; gender:text; emergency_contact:record {relationship:text; name:text; phone_number:text}; medical_history:vec text; phone_number:text; allergies:vec text}) -> (variant {Ok:record {id:text; age:nat64; owner:principal; name:text; current_medications:vec text; email:text; address:text; gender:text; emergency_contact:record {relationship:text; name:text; phone_number:text}; medical_history:vec text; phone_number:text; allergies:vec text}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}});
    updatePaymentStatus: (text, text) -> (variant {Ok:record {id:text; status:text; patient_id:text; appointment_id:text; payment_method:text; amount:nat64}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}});
}
